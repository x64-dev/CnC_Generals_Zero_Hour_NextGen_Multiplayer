name: Build All

on:
  push:
    branches: [ "main", "cicd" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [windows-latest]
        build_type: [Debug, Internal, Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/code/build" >> "$GITHUB_OUTPUT"
        echo "build-src-dir=${{ github.workspace }}/code" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cd ${{steps.strings.outputs.build-src-dir }}
        cmake -G "Visual Studio 17 2022" -T v143

    - name: Build.
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
